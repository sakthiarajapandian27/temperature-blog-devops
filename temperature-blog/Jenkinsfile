pipeline {
  agent any

  tools {
    nodejs 'NodeJS 18' // Ensure this matches Jenkins > Global Tool Configuration
  }

  environment {
    SONAR_PROJECT_KEY = 'temperature-blog'                  // ✅ Your SonarCloud project key
    SONAR_ORG = 'sakthiarajapandian27'                      // ✅ Your actual org name from SonarCloud
    SONAR_HOST_URL = 'https://sonarcloud.io'
    SONAR_TOKEN = credentials('sonar-token')                // ✅ Add this under Jenkins > Credentials
  }

  stages {

    stage('Build') {
      steps {
        echo '🔧 Building Docker image...'
        dir('temperature-blog') {
          bat 'docker build -t temperature-blog-app .'
        }
      }
    }

    stage('Test') {
      steps {
        echo '🧪 Running Jest Tests...'
        dir('temperature-blog') {
          bat 'npm install'
          bat 'npm test'
        }
      }
    }

    stage('Code Quality') {
      steps {
        echo '📊 Running SonarCloud Analysis...'
        dir('temperature-blog') {
          withSonarQubeEnv('SonarCloud') {
            bat """
              sonar-scanner ^
              -Dsonar.projectKey=%SONAR_PROJECT_KEY% ^
              -Dsonar.organization=%SONAR_ORG% ^
              -Dsonar.sources=. ^
              -Dsonar.host.url=%SONAR_HOST_URL% ^
              -Dsonar.login=%SONAR_TOKEN%
            """
          }
        }
      }
    }

    stage('Security Scan') {
      steps {
        echo '🔒 Running Trivy Vulnerability Scan...'
        dir('temperature-blog') {
          bat 'trivy image temperature-blog-app || echo "⚠️ Trivy scan skipped or found issues."'
        }
      }
    }

    stage('Deploy') {
      steps {
        echo '🚀 Deploying Docker Container on Port 3000...'
        dir('temperature-blog') {
          bat """
            docker stop temp-blog-container || echo "No existing container"
            docker rm temp-blog-container || echo "No container to remove"
            docker run -d -p 3000:3000 --name temp-blog-container temperature-blog-app
          """
        }
      }
    }

    stage('Release') {
      steps {
        echo '📦 Creating Git Tag and Pushing Release...'
        dir('temperature-blog') {
          bat """
            git config --global user.email "ci@jenkins.com"
            git config --global user.name "Jenkins CI"
            git tag v1.0.%BUILD_NUMBER%
            git push origin --tags
          """
        }
      }
    }

    stage('Monitoring') {
      steps {
        echo '📈 Performing Health Check on Port 3000...'
        bat 'curl -s http://localhost:3000 || echo "⚠️ Health check failed or curl not available."'
      }
    }
  }

  post {
    always {
      echo '✅ Pipeline execution completed.'
    }
    failure {
      echo '❌ Pipeline failed. Please check above logs for details.'
    }
  }
}
